// <auto-generated />
using System;
using ContractManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ContractManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ContractManagementContext))]
    [Migration("20251030124419_CreateTablesRefsProduct")]
    partial class CreateTablesRefsProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ContractManagement.Domain.Entity.Catalogo.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cod_barras");

                    b.Property<DateTime?>("DataAtualizao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EstoqueAtual")
                        .HasMaxLength(200)
                        .HasColumnType("integer")
                        .HasColumnName("estoque_atual");

                    b.Property<int>("EstoqueMaximo")
                        .HasMaxLength(200)
                        .HasColumnType("integer")
                        .HasColumnName("estoque_max");

                    b.Property<int>("EstoqueMinimo")
                        .HasMaxLength(200)
                        .HasColumnType("integer")
                        .HasColumnName("estoque_min");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("obersavao");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("und_medida");

                    b.HasKey("Id");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("ContractManagement.Domain.Entity.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_created");

                    b.HasKey("Id");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("ContractManagement.Domain.Entity.Pedidos.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAtualizao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_update");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_created");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uuid")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero_pedido");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("ContractManagement.Domain.Entity.Catalogo.Produto", b =>
                {
                    b.OwnsOne("ContractManagement.Domain.ValueObjects.Money", "PrecoCusto", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Coin")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("numeric(18,2)")
                                .HasColumnName("preco_custo");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.Money", "PrecoVenda", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Coin")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("numeric(18,2)")
                                .HasColumnName("preco_venda");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("ContractManagement.Domain.Entity.Promocao", "Promocao", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("uuid")
                                .HasColumnName("produto_id");

                            b1.Property<DateTime?>("DataAtualizao")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("DataCriacao")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<decimal>("DescontoPercentual")
                                .HasPrecision(18, 2)
                                .HasColumnType("numeric(18,2)")
                                .HasColumnName("desconto_percentual");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("promocao_produto", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");

                            b1.OwnsOne("ContractManagement.Domain.ValueObjects.PeriodoPromocional", "Periodo", b2 =>
                                {
                                    b2.Property<Guid>("PromocaoProdutoId")
                                        .HasColumnType("uuid");

                                    b2.Property<DateTime>("Fim")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("fim");

                                    b2.Property<DateTime>("Inicio")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("inicio");

                                    b2.HasKey("PromocaoProdutoId");

                                    b2.ToTable("promocao_produto");

                                    b2.WithOwner()
                                        .HasForeignKey("PromocaoProdutoId");
                                });

                            b1.Navigation("Periodo")
                                .IsRequired();
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.HorarioDisponibilidade", "Disponibilidade", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("uuid");

                            b1.Property<TimeSpan>("Fim")
                                .HasColumnType("interval")
                                .HasColumnName("fim");

                            b1.Property<TimeSpan>("Inicio")
                                .HasColumnType("interval")
                                .HasColumnName("inicio");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("disponibilidade_produto", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Disponibilidade");

                    b.Navigation("PrecoCusto")
                        .IsRequired();

                    b.Navigation("PrecoVenda")
                        .IsRequired();

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("ContractManagement.Domain.Entity.Clientes.Cliente", b =>
                {
                    b.OwnsOne("ContractManagement.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("email");

                            b1.HasKey("ClienteId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("character varying(8)")
                                .HasColumnName("cep");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("character varying(150)")
                                .HasColumnName("cidade");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("estado");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(4)
                                .HasColumnType("character varying(4)")
                                .HasColumnName("numero");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("character varying(150)")
                                .HasColumnName("rua");

                            b1.HasKey("ClienteId");

                            b1.ToTable("enderecos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.FirstName", "Nome", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("nome");

                            b1.HasKey("ClienteId");

                            b1.ToTable("clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.LastName", "LastName", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("sobrenome");

                            b1.HasKey("ClienteId");

                            b1.ToTable("clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("LastName")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();
                });

            modelBuilder.Entity("ContractManagement.Domain.Entity.Pedidos.Pedido", b =>
                {
                    b.OwnsOne("ContractManagement.Domain.ValueObjects.Money", "ValorTotal", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Coin")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("valor_total");

                            b1.HasKey("PedidoId");

                            b1.ToTable("pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsMany("ContractManagement.Domain.ValueObjects.ItemPedido", "Items", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<Guid>("IdProduto")
                                .HasColumnType("uuid")
                                .HasColumnName("id_produto");

                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Produto")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("produto");

                            b1.Property<int>("Quantidade")
                                .HasColumnType("integer")
                                .HasColumnName("quantidade");

                            b1.HasKey("Id");

                            b1.HasIndex("PedidoId");

                            b1.ToTable("item_pedido", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");

                            b1.OwnsOne("ContractManagement.Domain.ValueObjects.Money", "PrecoUnitario", b2 =>
                                {
                                    b2.Property<Guid>("ItemPedidoId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Coin")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<decimal>("Value")
                                        .HasColumnType("numeric")
                                        .HasColumnName("preco_unitario");

                                    b2.HasKey("ItemPedidoId");

                                    b2.ToTable("item_pedido");

                                    b2.WithOwner()
                                        .HasForeignKey("ItemPedidoId");
                                });

                            b1.Navigation("PrecoUnitario")
                                .IsRequired();
                        });

                    b.OwnsOne("ContractManagement.Domain.ValueObjects.OrderStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("varchar(10)")
                                .HasColumnName("status");

                            b1.HasKey("PedidoId");

                            b1.ToTable("pedido");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("Items");

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("ValorTotal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
